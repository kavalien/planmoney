#!/usr/bin/env python3
"""
–§–∏–∫—Å –¥–ª—è Google Sheets —Å –ø—Ä–æ–±–ª–µ–º–æ–π —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
"""

import json
import time
from datetime import datetime, timezone
import os
import sys
from pathlib import Path

# Add project root to path
sys.path.append(str(Path(__file__).parent))

def fix_service_account_time():
    """–ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É –≤—Ä–µ–º–µ–Ω–∏ –≤ Service Account"""
    
    credentials_file = "credentials/google_service_account.json"
    
    if not os.path.exists(credentials_file):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {credentials_file}")
        return False
    
    print("üîß –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –≤—Ä–µ–º–µ–Ω–∏...")
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–µ credentials
        with open(credentials_file, 'r') as f:
            creds_data = json.load(f)
        
        print(f"‚úÖ Service Account: {creds_data.get('client_email')}")
        print(f"‚úÖ Project ID: {creds_data.get('project_id')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
        import requests
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç –º–∏—Ä–æ–≤–æ–≥–æ API –≤—Ä–µ–º–µ–Ω–∏
            response = requests.get('http://worldtimeapi.org/api/timezone/UTC', timeout=5)
            if response.status_code == 200:
                real_time = response.json()
                real_datetime = datetime.fromisoformat(real_time['datetime'].replace('Z', '+00:00'))
                system_time = datetime.now(timezone.utc)
                
                time_diff = abs((real_datetime - system_time).total_seconds())
                
                print(f"üåê –†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è UTC: {real_datetime}")
                print(f"üíª –°–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è UTC: {system_time}")
                print(f"‚è∞ –†–∞–∑–Ω–∏—Ü–∞: {time_diff:.0f} —Å–µ–∫—É–Ω–¥")
                
                if time_diff > 300:  # –ë–æ–ª—å—à–µ 5 –º–∏–Ω—É—Ç
                    print("‚ùå –°–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è —Å–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ!")
                    print("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è")
                    return False
                else:
                    print("‚úÖ –í—Ä–µ–º—è –≤ –Ω–æ—Ä–º–µ")
        
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {e}")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
        
        import gspread
        from google.oauth2.service_account import Credentials
        
        # –°–æ–∑–¥–∞–µ–º credentials –±–µ–∑ refresh
        credentials = Credentials.from_service_account_file(
            credentials_file,
            scopes=['https://www.googleapis.com/auth/spreadsheets']
        )
        
        # –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å
        gc = gspread.authorize(credentials)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ
        spreadsheet_id = "1S0ifwdFSuqrxfumNQlgPKA-jd32_bOcrU3ufemJXGPM"
        
        try:
            spreadsheet = gc.open_by_key(spreadsheet_id)
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞: {spreadsheet.title}")
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
            worksheet = spreadsheet.sheet1
            print(f"‚úÖ –õ–∏—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω: {worksheet.title}")
            
            # –ü—Ä–æ–±—É–µ–º –∑–∞–ø–∏—Å–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            test_cell = f"Z1"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–ª—å–Ω—é—é –∫–æ–ª–æ–Ω–∫—É –¥–ª—è —Ç–µ—Å—Ç–∞
            current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            worksheet.update(test_cell, f"Test {current_time}")
            
            # –ß–∏—Ç–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
            value = worksheet.acell(test_cell).value
            print(f"‚úÖ –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏/—á—Ç–µ–Ω–∏—è: {value}")
            
            print("\nüéâ Google Sheets —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ: {e}")
            
            if "insufficient" in str(e).lower() or "permission" in str(e).lower():
                print("\nüí° –†–µ—à–µ–Ω–∏–µ:")
                print("1. –û—Ç–∫—Ä–æ–π—Ç–µ Google –¢–∞–±–ª–∏—Ü—É")
                print("2. –ù–∞–∂–º–∏—Ç–µ '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è'")
                print(f"3. –î–æ–±–∞–≤—å—Ç–µ email: {creds_data.get('client_email')}")
                print("4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∞–≤–∞: '–†–µ–¥–∞–∫—Ç–æ—Ä'")
                
            return False
    
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = fix_service_account_time()
    if success:
        print("\n‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Å Google Sheets —Ä–µ—à–µ–Ω–∞!")
    else:
        print("\n‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")