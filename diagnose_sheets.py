#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""

import sys
import os
import json
import asyncio
from datetime import datetime

# Add project root to path
sys.path.insert(0, '.')

try:
    from bot.services.google_sheets import GoogleSheetsService
    from bot.config import get_config
    import gspread
    from google.oauth2.service_account import Credentials
    from google.auth.transport.requests import Request
    from google.auth.exceptions import RefreshError
    import structlog
except ImportError as e:
    print(f"‚ùå Import error: {e}")
    print("Make sure virtual environment is activated")
    sys.exit(1)

logger = structlog.get_logger()

async def diagnose_google_sheets():
    """–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏."""
    
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    try:
        config = get_config()
        print(f"‚úÖ Credentials —Ñ–∞–π–ª: {config.GOOGLE_CREDENTIALS_FILE}")
        print(f"‚úÖ Spreadsheet ID: {config.GOOGLE_SPREADSHEET_ID}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ credentials —Ñ–∞–π–ª–∞
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ credentials —Ñ–∞–π–ª–∞...")
    if not os.path.exists(config.GOOGLE_CREDENTIALS_FILE):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {config.GOOGLE_CREDENTIALS_FILE}")
        return False
    
    try:
        with open(config.GOOGLE_CREDENTIALS_FILE, 'r') as f:
            creds_data = json.load(f)
        
        print(f"‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω")
        print(f"üìß Service account: {creds_data.get('client_email')}")
        print(f"üÜî Project ID: {creds_data.get('project_id')}")
        print(f"üîë Private key ID: {creds_data.get('private_key_id')}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return False
    
    # 3. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è credentials
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è credentials...")
    try:
        scope = [
            'https://spreadsheets.google.com/feeds',
            'https://www.googleapis.com/auth/drive'
        ]
        
        creds = Credentials.from_service_account_file(
            config.GOOGLE_CREDENTIALS_FILE, 
            scopes=scope
        )
        print("‚úÖ Credentials —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        print(f"üìÖ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã: {creds.valid}")
        print(f"‚è∞ –ò—Å—Ç–µ–∫–ª–∏: {creds.expired}")
        
        # –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
        if creds.expired or not creds.valid:
            print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...")
            request = Request()
            creds.refresh(request)
            print("‚úÖ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω")
        
    except RefreshError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ JWT —Ç–æ–∫–µ–Ω–∞: {e}")
        print("\nüí° –†–µ—à–µ–Ω–∏–µ:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è")
        print("2. –ü–µ—Ä–µ—Å–æ–∑–¥–∞–π—Ç–µ Service Account –≤ Google Cloud Console")
        print("3. –°–∫–∞—á–∞–π—Ç–µ –Ω–æ–≤—ã–π JSON —Ñ–∞–π–ª")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è credentials: {e}")
        return False
    
    # 4. –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ gspread
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ gspread...")
    try:
        client = gspread.authorize(creds)
        print("‚úÖ gspread –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è gspread –∫–ª–∏–µ–Ω—Ç–∞: {e}")
        return False
    
    # 5. –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ
    print("\n5Ô∏è‚É£ –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets...")
    try:
        spreadsheet = client.open_by_key(config.GOOGLE_SPREADSHEET_ID)
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ –Ω–∞–π–¥–µ–Ω–∞: {spreadsheet.title}")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
        worksheet = spreadsheet.sheet1
        print(f"‚úÖ –õ–∏—Å—Ç –Ω–∞–π–¥–µ–Ω: {worksheet.title}")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
        all_values = worksheet.get_all_values()
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—á–∏—Ç–∞–Ω—ã: {len(all_values)} —Å—Ç—Ä–æ–∫")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ: {e}")
        print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å Spreadsheet ID")
        print("2. –î–æ—Å—Ç—É–ø Service Account –∫ —Ç–∞–±–ª–∏—Ü–µ (Share)")
        print("3. –ü—Ä–∞–≤–∞ '–†–µ–¥–∞–∫—Ç–æ—Ä' –¥–ª—è Service Account")
        return False
    
    # 6. –¢–µ—Å—Ç –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
    print("\n6Ô∏è‚É£ –¢–µ—Å—Ç –Ω–∞—à–µ–≥–æ Google Sheets —Å–µ—Ä–≤–∏—Å–∞...")
    try:
        service = GoogleSheetsService()
        await service.initialize()
        
        # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        connection_ok = await service.test_connection()
        if connection_ok:
            print("‚úÖ –ù–∞—à —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        else:
            print("‚ùå –ù–∞—à —Å–µ—Ä–≤–∏—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞: {e}")
        return False
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! Google Sheets –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    return True

def print_troubleshooting_guide():
    """–ü–µ—á–∞—Ç—å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –Ω–µ–ø–æ–ª–∞–¥–æ–∫."""
    print("\n" + "=" * 50)
    print("üõ†Ô∏è –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –Ω–µ–ø–æ–ª–∞–¥–æ–∫")
    print("=" * 50)
    
    print("\nüîß –ï—Å–ª–∏ JWT —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω:")
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Google Cloud Console")
    print("2. –ù–∞–π–¥–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç: telegram-finance-bot-471311")
    print("3. IAM & Admin > Service Accounts")
    print("4. –ù–∞–π–¥–∏—Ç–µ finance-bot-service")
    print("5. –ù–∞–∂–º–∏—Ç–µ Actions > Manage keys")
    print("6. Add key > Create new key > JSON")
    print("7. –°–∫–∞—á–∞–π—Ç–µ –∏ –∑–∞–º–µ–Ω–∏—Ç–µ —Ñ–∞–π–ª credentials/google_service_account.json")
    
    print("\nüìä –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ Google Sheets")
    print("2. –ù–∞–∂–º–∏—Ç–µ Share –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É")
    print("3. –î–æ–±–∞–≤—å—Ç–µ email: finance-bot-service@telegram-finance-bot-471311.iam.gserviceaccount.com")
    print("4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–æ–ª—å: Editor")
    print("5. –°–Ω–∏–º–∏—Ç–µ –≥–∞–ª–æ—á–∫—É 'Notify people'")

async def main():
    """Main function."""
    success = await diagnose_google_sheets()
    
    if not success:
        print_troubleshooting_guide()
        print("\n‚ùå –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ.")
        sys.exit(1)
    else:
        print("\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–∞! Google Sheets –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

if __name__ == "__main__":
    asyncio.run(main())