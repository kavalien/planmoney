#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Google Sheets
"""

import os
import sys
from pathlib import Path

# Add project root to path
sys.path.append(str(Path(__file__).parent))

import gspread
from google.oauth2.service_account import Credentials

def check_and_clean_sheets():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ª–∏—Å—Ç–æ–≤ –∏ —É–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Google Sheets...")
    
    # Configuration
    credentials_file = "credentials/google_service_account.json"
    spreadsheet_id = "1S0ifwdFSuqrxfumNQlgPKA-jd32_bOcrU3ufemJXGPM"
    
    if not os.path.exists(credentials_file):
        print(f"‚ùå –§–∞–π–ª credentials –Ω–µ –Ω–∞–π–¥–µ–Ω: {credentials_file}")
        return False
    
    try:
        # Load credentials
        creds = Credentials.from_service_account_file(
            credentials_file,
            scopes=['https://www.googleapis.com/auth/spreadsheets']
        )
        
        # Connect to Google Sheets
        gc = gspread.authorize(creds)
        spreadsheet = gc.open_by_key(spreadsheet_id)
        
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Ç–∞–±–ª–∏—Ü–µ: {spreadsheet.title}")
        print()
        
        # List all worksheets
        worksheets = spreadsheet.worksheets()
        print(f"üìã –¢–µ–∫—É—â–∏–µ –ª–∏—Å—Ç—ã ({len(worksheets)}):")
        for i, ws in enumerate(worksheets):
            print(f"   {i+1}. '{ws.title}' (ID: {ws.id})")
        print()
        
        # Define what we need
        current_month = "2025-09"
        needed_sheets = [current_month]
        
        # Find sheets to delete
        sheets_to_delete = []
        sheets_to_keep = []
        
        for ws in worksheets:
            if ws.title in needed_sheets:
                sheets_to_keep.append(ws.title)
                print(f"‚úÖ –û—Å—Ç–∞–≤–ª—è–µ–º: '{ws.title}'")
            elif ws.title == "–õ–∏—Å—Ç1":  # Default sheet, –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –µ—Å–ª–∏ –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ
                if len(worksheets) > 1:
                    sheets_to_delete.append((ws.title, ws.id))
                    print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º: '{ws.title}' (–¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ª–∏—Å—Ç)")
                else:
                    print(f"‚ö†Ô∏è –û—Å—Ç–∞–≤–ª—è–µ–º: '{ws.title}' (–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ª–∏—Å—Ç)")
            elif "–†–∞—Å—Ö–æ–¥—ã-" in ws.title or "–î–æ—Ö–æ–¥—ã-" in ws.title or "–°–∞–ª—å–¥–æ-" in ws.title:
                sheets_to_delete.append((ws.title, ws.id))
                print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º: '{ws.title}' (—Å—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)")
            else:
                print(f"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ª–∏—Å—Ç: '{ws.title}' - –æ—Å—Ç–∞–≤–ª—è–µ–º")
        
        print()
        
        # Delete unnecessary sheets
        if sheets_to_delete:
            print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º {len(sheets_to_delete)} –Ω–µ–Ω—É–∂–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤...")
            for sheet_name, sheet_id in sheets_to_delete:
                try:
                    spreadsheet.del_worksheet_by_id(sheet_id)
                    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω: '{sheet_name}'")
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è '{sheet_name}': {e}")
        else:
            print("‚úÖ –ù–µ—Ç –ª–∏—Å—Ç–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        
        print()
        
        # Check structure of main sheet
        if current_month in [ws.title for ws in spreadsheet.worksheets()]:
            print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ª–∏—Å—Ç–∞ '{current_month}'...")
            worksheet = spreadsheet.worksheet(current_month)
            
            # Check key sections
            sections_to_check = [
                (1, "–î–ï–¢–ê–õ–¨–ù–´–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò"),
                (55, "–†–ê–°–•–û–î–´ –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú"),
                (90, "–î–û–•–û–î–´ –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú"),
                (125, "–ï–ñ–ï–î–ù–ï–í–ù–´–ô –ë–ê–õ–ê–ù–°")
            ]
            
            for row, expected_title in sections_to_check:
                try:
                    cell_value = worksheet.cell(row, 1).value
                    if cell_value == expected_title:
                        print(f"   ‚úÖ –°—Ç—Ä–æ–∫–∞ {row}: '{expected_title}'")
                    else:
                        print(f"   ‚ùå –°—Ç—Ä–æ–∫–∞ {row}: –æ–∂–∏–¥–∞–ª–æ—Å—å '{expected_title}', –Ω–∞–π–¥–µ–Ω–æ '{cell_value}'")
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä–æ–∫–∏ {row}: {e}")
        else:
            print(f"‚ùå –û—Å–Ω–æ–≤–Ω–æ–π –ª–∏—Å—Ç '{current_month}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        print()
        print("üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = check_and_clean_sheets()
    if not success:
        sys.exit(1)